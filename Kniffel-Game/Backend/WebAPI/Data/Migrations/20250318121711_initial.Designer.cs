// <auto-generated />
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20250318121711_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Models.LeaderboardEntry", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("Highscore")
                        .HasColumnType("int");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("leaderboardEntries");
                });

            modelBuilder.Entity("Models.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Bonus")
                        .HasColumnType("int");

                    b.Property<int>("Bottom_Sum")
                        .HasColumnType("int");

                    b.Property<int>("Chance")
                        .HasColumnType("int");

                    b.Property<int>("Fives")
                        .HasColumnType("int");

                    b.Property<int>("Four_of_a_Kind")
                        .HasColumnType("int");

                    b.Property<int>("Fours")
                        .HasColumnType("int");

                    b.Property<int>("Full_House")
                        .HasColumnType("int");

                    b.Property<int>("Kniffel")
                        .HasColumnType("int");

                    b.Property<int>("Large_Street")
                        .HasColumnType("int");

                    b.Property<int>("LeaderboardEntryID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Ones")
                        .HasColumnType("int");

                    b.Property<int>("Sixes")
                        .HasColumnType("int");

                    b.Property<int>("Small_Street")
                        .HasColumnType("int");

                    b.Property<int>("Three_of_a_Kind")
                        .HasColumnType("int");

                    b.Property<int>("Threes")
                        .HasColumnType("int");

                    b.Property<int>("Top_Sum")
                        .HasColumnType("int");

                    b.Property<int>("Total_Sum")
                        .HasColumnType("int");

                    b.Property<int>("Total_Top")
                        .HasColumnType("int");

                    b.Property<int>("Twos")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LeaderboardEntryID");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("Models.Player", b =>
                {
                    b.HasOne("Models.LeaderboardEntry", "LeaderboardEntry")
                        .WithMany()
                        .HasForeignKey("LeaderboardEntryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LeaderboardEntry");
                });
#pragma warning restore 612, 618
        }
    }
}
